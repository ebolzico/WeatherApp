{"ast":null,"code":"var _jsxFileName = \"/home/emanuel/Documentos/Henry/Carrera/FT-M2/08-React-Estado-LifeCycle/homework/src/components/SearchBar.jsx\";\nimport React, { useState } from \"react\";\nimport './searchBar.css';\nexport default function SearchBar({\n  onSearch\n}) {\n  const [city, setCity] = useState(\"\"); // >>>> Esto es un Hook!\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault(); // default: agregar=refresh, yo no quiero eso, por eso cuando le doy\n\n      onSearch(city); // agregar, que ejecute onSearch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Search city...\",\n    value: city,\n    onChange: e => setCity(e.target.value) // Modifica city cuando haya un cambio en el target\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"button\",\n    type: \"submit\",\n    value: \"Agregar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })) // este input, que tiene del tipo submit, cuando activa, hace una accion del tipo\n  ; // \"submit\". Eso activa el onSubmit que esta arriba (que actua como un event listener)\n} // y hace todo el recorrido de la funcion","map":{"version":3,"sources":["/home/emanuel/Documentos/Henry/Carrera/FT-M2/08-React-Estado-LifeCycle/homework/src/components/SearchBar.jsx"],"names":["React","useState","SearchBar","onSearch","city","setCity","e","preventDefault","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA+B;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CAD4C,CACN;;AACtC,SAEE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAGK,CAAD,IAAO;AACtCA,MAAAA,CAAC,CAACC,cAAF,GADsC,CAClB;;AACpBJ,MAAAA,QAAQ,CAACC,IAAD,CAAR,CAFsC,CAElB;AACrB,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,KAAK,EAAEA,IAJT;AAKE,IAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CALxB,CAKyC;AALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAFF,CAeQ;AAfR,GAF4C,CAkBpC;AACT,C,CAAS","sourcesContent":["import React, { useState } from \"react\";\nimport './searchBar.css'\n\nexport default function SearchBar({onSearch}) {\n  const [city, setCity] = useState(\"\"); // >>>> Esto es un Hook!\n  return (\n    \n    <form className=\"form\" onSubmit={(e) => {\n      e.preventDefault(); // default: agregar=refresh, yo no quiero eso, por eso cuando le doy\n      onSearch(city);     // agregar, que ejecute onSearch\n    }}>\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Search city...\"\n        value={city}\n        onChange={e => setCity(e.target.value)}// Modifica city cuando haya un cambio en el target\n      />\n      <input className=\"button\" type=\"submit\" value=\"Agregar\" />\n    </form>\n          // este input, que tiene del tipo submit, cuando activa, hace una accion del tipo\n  );      // \"submit\". Eso activa el onSubmit que esta arriba (que actua como un event listener)\n}         // y hace todo el recorrido de la funcion\n"]},"metadata":{},"sourceType":"module"}