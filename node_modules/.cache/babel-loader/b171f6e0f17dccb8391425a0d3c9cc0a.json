{"ast":null,"code":"var _jsxFileName = \"/home/emanuel/Documentos/Henry/Carrera/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav from './components/Nav.jsx';\nimport Cards from './components/Cards.jsx';\nexport default function App() {\n  const [cities, setCities] = useState([]);\n\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${'4ae2636d8dfbdc3044bede63951a019b'}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    onSearch: onSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Cards, {\n    onClose: onClose,\n    cities: cities,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/emanuel/Documentos/Henry/Carrera/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","useState","Nav","Cards","App","cities","setCities","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","onClose","filter","c"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AACA,WAASM,QAAT,CAAkBC,MAAlB,EAA0B;AACxBC,IAAAA,KAAK,CAAE,oDAAmDD,MAAO,UAAS,kCAAmC,eAAxG,CAAL,CACGE,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAESG,OAAD,IAAa;AACjB,UAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B;AAC5B,cAAMP,MAAM,GAAG;AACbQ,UAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;AAEbC,UAAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;AAGbC,UAAAA,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbC,UAAAA,EAAE,EAAEZ,OAAO,CAACY,EAJC;AAKbC,UAAAA,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;AAMbC,UAAAA,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;AAObC,UAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAPD;AAQbN,UAAAA,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;AASbgB,UAAAA,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;AAUbC,UAAAA,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;AAWbC,UAAAA,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;AAXX,SAAf;AAaA9B,QAAAA,SAAS,CAAC+B,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe7B,MAAf,CAAd,CAAT;AACD,OAfD,MAeO;AACL8B,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KArBH;AAwBD;;AACD,WAASC,OAAT,CAAiBd,EAAjB,EAAqB;AACnBnB,IAAAA,SAAS,CAAC+B,SAAS,IAAIA,SAAS,CAACG,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAAChB,EAAF,KAASA,EAA/B,CAAd,CAAT;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAElB,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEgC,OAAhB;AAAyB,IAAA,MAAM,EAAElC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport Nav from './components/Nav.jsx'\nimport Cards from './components/Cards.jsx';\n \n\n\nexport default function App() {\n  const [cities, setCities] = useState([]);\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${'4ae2636d8dfbdc3044bede63951a019b'}&units=metric`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  \n\n  }\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  return (\n    <div className=\"App\">\n      { }\n      \n        <Nav onSearch={onSearch}/> \n      \n      <Cards onClose={onClose} cities={cities}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}